snippet heat "OpenStack Heat Template (HOT)" b
heat_template_version: 2015-04-30

resources:
  kafka_network:
    type: OS::Neutron::Net

  kafka_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: kafka_network }
      cidr: "192.168.1.0/24"
      ip_version: 4

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: net04_ext }

  kafka_subnet_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: {get_resource: kafka_subnet }

  zookeeper1_port:
    type: OS::Neutron::Port
    properties:
       network: { get_resource: kafka_network }

  zookeeper1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: "net04_ext"

  zookeepter1_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: zookeeper1_floating_ip }
      port_id: { get_resource: zookeeper1_port }


  zookeeper1:
    type: OS::Nova::Server
    properties:
      key_name: quantum
      flavor: m1.small
      image: ubuntu1504
      user_data_format: RAW
      networks:
        - port: { get_resource: zookeeper1_port }

outputs:
  zookeeper1_external_ip:
    description: zookeeper1 external IP address
    value: { get_attr: [zookeeper1_floating_ip, floating_ip_address] }


endsnippet

snippet server
${1:server_name}:
	type: OS::Nova::Server
	properties:
		key_name: ${2:key_name}
		flavor: ${3:m1.small}
		image: ${4:ubuntu1504}
		user_data_format: RAW
		networks:
			- port: { get_resource: zookeeper1_port }
$1_port:
type: OS::Neutron::Port
properties:
 network: { get_resource: kafka_network }

endsnippet

snippet hrg
${1:rg_name}:
	type: OS::Heat::ResourceGroup
	properties:
		count: 3
		resource_def: {type: ${2:mongodb_node}.yaml}
endsnippet

snippet hparam
${1:param_name}:
	type: string
	label: Network ID
	description:  (openstack uuid) of the network to which the instance will be attached
endsnippet

snippet hsecuritygroup
${1:ssh}_security_group:
	type: OS::Neutron::SecurityGroup
	properties:
		description: Allow $1
		name: $1-security-group
		rules:
			- protocol: tcp
				port_range_min: ${2:22}
				port_range_max: ${3:22}
endsnippet


snippet k8ssecret
---
apiVersion: v1
kind: Secret
metadata:
    name: ${1:secretname}
type: Opaque
data:
  ${2:KEY_NAME}: ${3:base64encodedvalue}
endsnippet 
