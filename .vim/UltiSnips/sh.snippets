# vim: set tabstop=2 noexpandtab:
snippet header
#!/bin/bash
set -euxo pipefail
# e : fail as soon as a command fails, don't continue
# u : fail if nonexisting variable can't be expanded
# x : echo each line as it's executed
# -o pipefail: fail if a command in a pipe returns status != 0


endsnippet

snippet iffileexists "if [ -f xxxx]; then; done"
if [ -f ${1:$filename} ]; then
$0
fi
endsnippet

snippet iffilenotexists "if [ ! -f xxxx]; then; done"
if [ ! -f ${1:$filename} ]; then
$0
fi
endsnippet

snippet ifvarempty "check if variable is empty or unset"
if [ -z "${${1:var}-}" ]; then
echo "Must provide $1 environment variable"
exit 1
fi
endsnippet

snippet getopts
#!/bin/bash
# Usage  ./myscript.sh -e conf -s /etc -l /usr/lib /etc/hosts 
# Use -gt 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use -gt 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to -gt 0 the /etc/hosts part is not recognized ( may be a bug )
while [[ $# -gt 1 ]]
do
key="\$1"

case $key in
	-e|--extension)
	EXTENSION="\$2"
	shift # past argument
	;;
	-s|--searchpath)
	SEARCHPATH="\$2"
	shift # past argument
	;;
	-l|--lib)
	LIBPATH="\$2"
	shift # past argument
	;;
	--default)
	DEFAULT=YES
	;;
	*)
	# unknown option
	;;
esac
shift # past argument or value
done
echo FILE EXTENSION  = "${EXTENSION}"
echo SEARCH PATH		 = "${SEARCHPATH}"
echo LIBRARY PATH		 = "${LIBPATH}"
echo "Number files in SEARCH PATH with EXTENSION:" $(ls -1 "${SEARCHPATH}"/*."${EXTENSION}" | wc -l)
if [[ -n \$1 ]]; then
	echo "Last line of file specified as non-opt/last argument:"
	tail -1 \$1
fi
endsnippet

snippet function "function myfunc()" !b
function ${1:myfuncname} {
# Access parameters \$1, \$2, ${\$1:mydefaultvalue}
$0
}
endsnippet
